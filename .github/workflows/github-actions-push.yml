name: userscript script pipeline
on:
  push:
  pull_request:
    branches:
    - main
    - feature/*
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true
env:
  PACKAGE_NAME: Compendium.LinkedInProfilePrint.user.js
  ARTIFACT_NAME: userscript
  NODE_VERSION: '18'
defaults:
  run:
    shell: pwsh
jobs:
  SemanticVersion:
    runs-on: ubuntu-latest
    outputs:
      semantic_version: ${{ steps.semantic_release.outputs.SEMANTIC_VERSION }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Setup Node Version
      uses: actions/setup-node@master
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Node Package Restore
      run: ./build/scripts/Install-NodePackages.ps1
    - name: Semantic Release (Dry-Run)
      id: semantic_release
      run: ./build/scripts/Invoke-SemanticRelease.ps1 -DryRun
      env:
        GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        GH_REF: ${{ github.ref }}
  Test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
        working-directory: src
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
    - name: Setup Node Version
      uses: actions/setup-node@master
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Node Package Restore
      run: ./../build/scripts/Install-NodePackages.ps1
    - name: ESLint
      run: ./../build/scripts/Test-JavaScript.ps1 -FileName "${{ env.PACKAGE_NAME}}"
  Build:
    runs-on: ubuntu-latest
    needs:
    - SemanticVersion
    - Test
    defaults:
      run:
        shell: pwsh
        working-directory: src
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Update Version
      run: ./../build/scripts/Update-Version.ps1 -FilePath "${{ env.PACKAGE_NAME }}" -Version "${{ needs.SemanticVersion.outputs.semantic_version }}"
    - name: Publish Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: src/${{ env.PACKAGE_NAME }}
  Release:
    if: ${{ github.ref == 'refs/heads/main' && github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    needs:
    - SemanticVersion
    - Build
    defaults:
      run:
        shell: pwsh
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Download Artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: a/${{ env.ARTIFACT_NAME }}
    - name: Setup Node Version
      uses: actions/setup-node@master
      with:
        node-version: ${{ env.NODE_VERSION }}
    - name: Node Package Restore
      run: ./build/scripts/Install-NodePackages.ps1
    - name: Semantic Release
      id: semantic_release
      run: ./build/scripts/Invoke-SemanticRelease.ps1
      env:
        GH_TOKEN: ${{ secrets.SEMANTIC_RELEASE_TOKEN }}
        GH_REF: ${{ github.ref }}
